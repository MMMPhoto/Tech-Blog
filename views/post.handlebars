{{!-- Post Card with extra options --}}
<div class="card m-1">
    <div class="card-body border border-dark p-0 m-3">
        <div class="d-flex flex-row justify-content-between card-header bg-secondary m-1">
            <h3><a href='/post/{{getPost.id}}'>{{getPost.title}}</a></h3>
            <p>By: {{getPost.username}} on {{getPost.creation_date}}</p>
        </div>
        <div class="card-contents m-1">
            <p>{{getPost.contents}}</p>
        </div>
        {{!-- Update and Delete Buttons --}}
        <div class="d-flex flex-row justify-content-end">
            <button class="btn btn-primary m-2" id="update-post"><a href="/update-post/{{getPost.id}}">Update Post</a></button>
            <button class="btn btn-primary m-2" id="delete-post">Delete Post</button>
        </div>
    </div>
</div>

<div class="d-flex flex-row justify-content-end delete-warning" id="delete-warning">
    <em>Are you sure you want to delete this comment?</em>
    <button class="btn btn-primary m-2" id="yes-delete-post">YES DELETE</button>
</div>

{{!-- Comment Card Template --}}
{{#each getComments as |comment|}}
{{> comment }}
{{/each}}

{{!-- New Comment button --}}
<button class="btn btn-primary m-2" id="leave-comment"><a href="/post-new-comment/{{getPost.id}}">Leave Comment</a></button>

{{!-- New Comment Form --}}
{{!-- <div class="card m-1 comment-form">
    <div class="card-body border border-dark p-0 m-3">
        <form class="form m-1 new-comment-form">
            <div class="form-group m-1">
                <label for="comment-text">Comment:</label>
                <input class="form-input" type="text" id="comment-text" />
            </div>
            <div class="form-group m-1">
                <button class="btn btn-primary" type="submit">Comment</button>
            </div>
        </form>
    </div>
</div> --}}

<script>
    // Function to display delete warning
   // const showDeleteWarning = async (event) => {
    //    event.preventDefault();

   //     document.querySelector('.delete-warning').style.display = "inline";
   // };



    // Function to submit comment
    const commentHandler = async (event) => {
        event.preventDefault();

        const text = document.querySelector('#comment-text').value.trim();
        const url = window.location.href;
        const postId = url.split('post/').pop().split('?')[0];

        if (text) {
            const sendComment = async (text, postId) => {
                return fetch('/api/comments', {
                    method: 'POST',
                    body: JSON.stringify({text, postId}),
                    headers: { 'Content-Type': 'application/json' },
                })
                .then((response) => {
                    console.log(`Status: ${response.status}`);
                    if (!response.ok) {
                        alert('Error Posting');
                        return;
                    } else {
                        return response.json();        
                    };
                })
                .then((results) => {
                    console.log(results);
                    return results;
                })
                .catch(err => response.status(500).send(err));
            };

            let results = await sendComment(text, postId);
            console.log(results);
            document.location.reload();
        }
    };

    // Click to display delete warning
    // document
    //    .querySelector('.delete-post')
    //    .addEventListener('submit', showDeleteWarning);

    // Click to submit comment
    // document
    //    .querySelector('.new-comment-form')
    //    .addEventListener('click', commentHandler);

    
</script>

<script src="/js/post.js"></script>